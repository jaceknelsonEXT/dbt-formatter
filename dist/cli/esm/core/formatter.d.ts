import { Options, Token } from '@types';
import { LinkedList } from '../utils/data-structures';
export default class Formatter {
    private upper;
    private newline;
    private indentation;
    private variableName;
    private lowerWords;
    private allowCamelcase;
    private inlineOneLiner;
    private inTemplateBlock;
    private inVariableBlock;
    private inIncrementalBlock;
    private inlineBlock;
    private previousReservedWord;
    constructor(opt: Options);
    format: (tokens: LinkedList<Token>) => string;
    private indentComment;
    private trimTrailingWhitespace;
    private addNewline;
    private getNextNodeNonWhitespace;
    private getPreviousNodeNonWhitespace;
    private countWordsBetweenParenthesis;
    private formatVariableStart;
    private formatVariableEnd;
    private formatTemplateStart;
    private formatTemplateEnd;
    private formatDBTStartMarker;
    private formatDBTEndMarker;
    private formatLineComment;
    private formatBlockComment;
    private formatReservedWord;
    private formatToplevelReservedWord;
    private formatNewlineReservedWord;
    private formatOpeningParentheses;
    private formatClosingParentheses;
    private formatComma;
    private formatOperator;
    private formatWithSpaceAfter;
    private formatWithoutSpaces;
    private formatWithSpaces;
    private formatWord;
    private formatQuerySeparator;
}
